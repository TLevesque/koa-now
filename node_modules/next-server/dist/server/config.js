"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const find_up_1 = __importDefault(require("find-up"));
const constants_1 = require("next-server/constants");
const defaultConfig = {
    webpack: null,
    webpackDevMiddleware: null,
    poweredByHeader: true,
    distDir: '.next',
    assetPrefix: '',
    configOrigin: 'default',
    useFileSystemPublicRoutes: true,
    generateBuildId: () => null,
    generateEtags: true,
    pageExtensions: ['jsx', 'js']
};
function loadConfig(phase, dir, customConfig) {
    if (customConfig) {
        customConfig.configOrigin = 'server';
        return Object.assign({}, defaultConfig, customConfig);
    }
    const path = find_up_1.default.sync(constants_1.CONFIG_FILE, {
        cwd: dir
    });
    // If config file was found
    if (path && path.length) {
        const userConfigModule = require(path);
        const userConfigInitial = userConfigModule.default || userConfigModule;
        if (typeof userConfigInitial === 'function') {
            return Object.assign({}, defaultConfig, { configOrigin: constants_1.CONFIG_FILE }, userConfigInitial(phase, { defaultConfig }));
        }
        return Object.assign({}, defaultConfig, { configOrigin: constants_1.CONFIG_FILE }, userConfigInitial);
    }
    return defaultConfig;
}
exports.default = loadConfig;
